[core]
	excludesfile = ~/.config/git/ignore
	editor = hx
[init]
	defaultBranch = main
[alias]
  s = status -s
  d = diff
  b = branch 
  bb = !~/.config/git/better-branch.sh
  ba = branch -avvvv

  c = commit 
  ca = c -a
  caa = c --amend 
  caae = a --no-edit

  p = push

  sw = switch

  l = log --all --color --graph --pretty=format:'%Cred%h%Creset %G?%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  hd = show -p --pretty="tformat:"

  rem = remote -v

  cleanup = "!git branch --merged | grep  -v '\\*\\|main\\|master\\|develop\\|staging\\|production' | xargs -n 1 git branch -d"

  latestTag = describe --tags --abbrev=0

  fuckit = reset --hard

  r = rebase
  rc = rebase --continue
  delete-squashed = "!f() { local targetBranch=${1:-main} && git checkout -q $targetBranch && git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d && git for-each-ref refs/heads/ \"--format=%(refname:short)\" | while read branch; do mergeBase=$(git merge-base $targetBranch $branch) && [[ $(git cherry $targetBranch $(git commit-tree $(git rev-parse $branch^{tree}) -p $mergeBase -m _)) == \"-\"* ]] && git branch -D $branch; done; }; f"

[commit]
	template = ~/.config/git/gitmessage
	verbose = true
[includeIf "gitdir:~/"]
  path = ~/.config/git/config.personal
[includeIf "gitdir:~/work/"]
  path = ~/.config/git/config.value
[rebase]
	autoStash = true
	autoSquash = true
	updateRefs = true
[merge]
	autoStash = true
	conflictStyle = "zdiff3"
[pager]
   diff = diff-so-fancy | less --tabs=1,5 -RFX
   show = diff-so-fancy | less --tabs=1,5 -RFX
[pull]
	rebase = true
[gpg]
	program = gpg
[branch]
	sort = -committerdate
[column]
	ui = auto
[rerere]
	enabled = true
	autoupdate = true
[fetch]
	prune = true
[log]
	date = iso
[tag]
	sort = version:refname
[diff]
	algorithm = histogram
	colorMoved = plain
	mnemonicPrefix = true
	renames = true
[push]
	default = simple
	autoSetupRemote = true
	followTags = true
[fetch]
	prune = true
	pruneTags = true
	all = true
[help]
	autocorrect = prompt
